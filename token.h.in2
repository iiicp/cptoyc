#ifndef TOKEN
#error "You must define TOKEN macro before include this file"
#endif

// keyword
TOKEN(AUTO,     "auto")
TOKEN(EXTERN,   "extern")
TOKEN(REGISTER, "register")
TOKEN(STATIC,   "static")
TOKEN(TYPEDEF,  "typedef")
TOKEN(CONST,    "const")
TOKEN(VOLATILE, "volatile")
TOKEN(SIGNED,   "signed")
TOKEN(UNSIGNED, "unsigned")
TOKEN(SHORT,    "short")
TOKEN(LONG,     "long")
TOKEN(CHAR,     "char")
TOKEN(INT,      "int")
TOKEN(FLOAT,    "float")
TOKEN(DOUBLE,   "double")
TOKEN(ENUM,     "enum")
TOKEN(STRUCT,    "struct")
TOKEN(UNION,     "union")
TOKEN(VOID,      "void")
TOKEN(BREAK,     "break")
TOKEN(CASE,      "case")
TOKEN(CONTINUE,  "continue")
TOKEN(DEFAULT,   "default")
TOKEN(DO,        "do")
TOKEN(ELSE,      "else")
TOKEN(FOR,       "for")
TOKEN(GOTO,      "goto")
TOKEN(IF,        "if")
TOKEN(RETURN,    "return")
TOKEN(SWITCH,    "switch")
TOKEN(WHILE,     "while")
TOKEN(SIZEOF,    "sizeof")


// operators
TOKEN(COMMA,            ",")
TOKEN(QUESTION,         "?")
TOKEN(COLON,            ":")
TOKEN(ASSIGN,           "=")
TOKEN(BITOR_ASSIGN,     "|=")
TOKEN(BITXOR_ASSIGN,    "^=")
TOKEN(BITAND_ASSIGN,    "&=")
TOKEN(LSHIFT_ASSIGN,    "<<=")
TOKEN(RSHIFT_ASSIGN,    ">>=")
TOKEN(ADD_ASSIGN,       "+=")
TOKEN(SUB_ASSIGN,       "-=")
TOKEN(MUL_ASSIGN,       "*=")
TOKEN(DIV_ASSIGN,       "/=")
TOKEN(MOD_ASSIGN,       "%=")
TOKEN(OR,               "||")
TOKEN(AND,              "&&")
TOKEN(BITOR,            "|")
TOKEN(BITXOR,           "^")
TOKEN(BITAND,           "&")
TOKEN(EQUAL,            "==")
TOKEN(UNEQUAL,          "!=")
TOKEN(GREAT,            ">")
TOKEN(LESS,             "<")
TOKEN(GREAT_EQ,         ">=")
TOKEN(LESS_EQ,          "<=")
TOKEN(LSHIFT,           "<<")
TOKEN(RSHIFT,           ">>")
TOKEN(ADD,              "+")
TOKEN(SUB,              "-")
TOKEN(MUL,              "*")
TOKEN(DIV,              "/")
TOKEN(MOD,              "%")
TOKEN(INC,              "++")
TOKEN(DEC,              "--")
TOKEN(NOT,              "!")
TOKEN(BITNOT,           "~")
TOKEN(DOT,              ".")
TOKEN(POINTER,          "->")
TOKEN(LPAREN,           "(")
TOKEN(RPAREN,           ")")
TOKEN(LBRACKET,         "[")
TOKEN(RBRACKET,         "]")

TOKEN(LBRACE,           "{")
TOKEN(RBRACE,           "}")
TOKEN(SEMICOLON,        ";")
TOKEN(ELLIPSE,          "...")